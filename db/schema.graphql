type User {
  name: String
  email: String! @unique
  hashedPassword: String
  role: String!
  sessions: [Session!] @relation
}

type Session {
  expiresAt: String
  handle: String! @unique
  user: User!
  hashedSessionToken: String
  antiCSRFToken: String
  publicData: String
  privateData: String
}

type Customer {
  name: String! @unique
  email: String! @unique
  phone: String @unique
  street: String
  number: String
  zip: String
  city: String
  vat: String
  country: String
  estimates: [Estimate]! @relation
}

type Service @embedded {
  description: String!
  quantity: Int!
  vat: Float!
  priceWithoutVat: Float!
  priceWithVat: Float!
  unitPrice: Float!
}

type Estimate {
  description: String
  priceWithoutVat: Float!
  priceWithVat: Float!
  customer: Customer
  creationDate: String!
  expirationDate: String!
  services: [Service!]!
}

type Query {
  customers: [Customer]!
  estimates: [Estimate]!
  users: [User!]
  findUserByEmail(email: String!): User @index(name: "unique_User_email")
  findSessionByHandle(handle: String!): Session @index(name: "unique_Session_handle")
}
